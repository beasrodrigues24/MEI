<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.

//No. of planes 
const int N = 2;
//Generate plane ids
typedef int [0, N-1] planeID;

// Generates channels
chan take_off[N], land[N], wait[N], gone;

</declaration>
	<template>
		<name x="5" y="5">Plane</name>
		<parameter>const planeID id</parameter>
		<declaration>// Place local declarations here.
clock x;
bool isTakeOff;</declaration>
		<location id="id0" x="-806" y="-93">
			<name x="-831" y="-127">Parked</name>
		</location>
		<location id="id1" x="-518" y="-93">
			<name x="-543" y="-127">Approaching</name>
			<label kind="invariant" x="-528" y="-76">x&lt;=5</label>
		</location>
		<location id="id2" x="569" y="-93">
			<name x="559" y="-127">Flying</name>
			<label kind="invariant" x="559" y="-76">x &lt;= 7</label>
		</location>
		<location id="id3" x="136" y="-93">
			<name x="100" y="-136">FieldTakeOff</name>
			<label kind="invariant" x="126" y="-76">x &lt;= 3</label>
		</location>
		<location id="id4" x="-187" y="-331">
			<name x="-179" y="-365">FieldLanding</name>
			<label kind="invariant" x="-197" y="-314">x &lt;= 6</label>
		</location>
		<location id="id5" x="-357" y="34">
			<name x="-367" y="0">Waiting</name>
			<label kind="invariant" x="-374" y="51">x &lt;= 7</label>
		</location>
		<location id="id6" x="-187" y="-93">
			<name x="-197" y="-127">Split</name>
			<committed/>
		</location>
		<location id="id7" x="-357" y="-93">
			<name x="-367" y="-127">IDLE</name>
			<label kind="invariant" x="-367" y="-76">x &lt;= 5</label>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id7"/>
			<target ref="id6"/>
			<label kind="guard" x="-297" y="-110">x &gt;= 5</label>
			<label kind="assignment" x="-297" y="-93">x := 0</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id3"/>
			<label kind="guard" x="-59" y="-119">isTakeOff == true</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id4"/>
			<label kind="guard" x="-178" y="-229">isTakeOff == false</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="guard" x="-280" y="17">x &gt;= 5</label>
			<label kind="assignment" x="-272" y="34">x:=0</label>
			<nail x="-187" y="34"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id0"/>
			<label kind="guard" x="-544" y="-374">x &gt;= 4</label>
			<label kind="synchronisation" x="-535" y="-357">gone!</label>
			<label kind="assignment" x="-525" y="-322">x:=0</label>
			<nail x="-807" y="-331"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="357" y="-144">x&gt;=1</label>
			<label kind="synchronisation" x="357" y="-118">gone!</label>
			<label kind="assignment" x="357" y="-93">x:=0</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="51" y="136">x &gt;= 5</label>
			<label kind="synchronisation" x="51" y="153">land[id]!</label>
			<label kind="assignment" x="61" y="179">x := 0,
isTakeOff:=false</label>
			<nail x="578" y="178"/>
			<nail x="-518" y="178"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id7"/>
			<label kind="guard" x="-442" y="-110">x &gt;= 5</label>
			<label kind="assignment" x="-433" y="-93">x:=0</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id5"/>
			<label kind="guard" x="-476" y="-8">x &lt;= 5</label>
			<label kind="synchronisation" x="-475" y="9">wait[id]?</label>
			<label kind="assignment" x="-476" y="42">x:=0</label>
			<nail x="-493" y="34"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-679" y="-110">take_off[id]!</label>
			<label kind="assignment" x="-671" y="-93">x:=0,
isTakeOff:=true</label>
		</transition>
	</template>
	<template>
		<name>Controller</name>
		<declaration>clock x;
planeID current;
bool free = true;

int in = 0;
</declaration>
		<location id="id8" x="-765" y="-425">
			<name x="-775" y="-459">IDLE</name>
		</location>
		<location id="id9" x="-765" y="-161">
			<name x="-775" y="-195">Evaluating</name>
			<label kind="invariant" x="-782" y="-144">x &lt;= 5</label>
		</location>
		<init ref="id8"/>
		<transition>
			<source ref="id9"/>
			<target ref="id9"/>
			<label kind="guard" x="-696" y="-59">in == 0</label>
			<label kind="assignment" x="-705" y="-34">free := true</label>
			<nail x="-730" y="-51"/>
			<nail x="-637" y="-119"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id8"/>
			<label kind="guard" x="-680" y="-535">in == 0</label>
			<label kind="assignment" x="-680" y="-518">free:=true</label>
			<nail x="-722" y="-518"/>
			<nail x="-637" y="-484"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-901" y="-535">gone?</label>
			<label kind="assignment" x="-901" y="-518">in--</label>
			<nail x="-808" y="-519"/>
			<nail x="-901" y="-485"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="-917" y="-77">gone?</label>
			<label kind="assignment" x="-909" y="-60">in--</label>
			<nail x="-909" y="-102"/>
			<nail x="-824" y="-51"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="guard" x="-1096" y="-314">in == 1 || x &gt;= 5</label>
			<label kind="assignment" x="-1071" y="-289">free:=false</label>
			<nail x="-986" y="-161"/>
			<nail x="-986" y="-425"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="guard" x="-663" y="-195">in &gt; 1 &amp;&amp; x &lt;= 5</label>
			<label kind="synchronisation" x="-629" y="-178">wait[current]!</label>
			<nail x="-510" y="-161"/>
			<nail x="-510" y="-425"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="select" x="-680" y="-382">e : planeID</label>
			<label kind="synchronisation" x="-663" y="-365">land[e]?</label>
			<label kind="assignment" x="-705" y="-323">x:=0,
current:=e,
in++</label>
			<nail x="-620" y="-297"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="select" x="-918" y="-382">e : planeID</label>
			<label kind="synchronisation" x="-918" y="-365">take_off[e]?</label>
			<label kind="assignment" x="-867" y="-323">x:=0,
current:=e,
in++</label>
			<nail x="-901" y="-297"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system Plane, Controller;
    </system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[] forall (i:planeID) forall (j:planeID) not ((Plane(i).FieldLanding &amp;&amp; Plane(j).FieldTakeOff) || (Plane(i).FieldTakeOff &amp;&amp; Plane(j).FieldLanding)) &amp;&amp; ((Plane(i).FieldTakeOff &amp;&amp; Plane(j).FieldTakeOff) &amp;&amp; (Plane(i).FieldLanding &amp;&amp; Plane(j).FieldLanding) imply i == j)</formula>
			<comment>only 1 plane can use the field at a time;</comment>
		</query>
		<query>
			<formula></formula>
			<comment>a Controller component receives requests to land or to take off, and replies with a wait signal
when the field is not available</comment>
		</query>
		<query>
			<formula></formula>
			<comment>each plane sends requests to the Controller to land or to take off, and sends notifications
when the field becomes free</comment>
		</query>
		<query>
			<formula>A[] not (Controller.Evaluating &amp;&amp; Controller.x &gt; 5)</formula>
			<comment>the Controller has 5 time units to notify a plane to wait</comment>
		</query>
		<query>
			<formula>A[] forall (i:planeID) Plane(i).IDLE imply (Plane(i).x&gt;=5 &amp;&amp; ((Plane(i).FieldTakeOff || Plane(i).FieldLanding) imply Plane(i).x &gt;= 5))</formula>
			<comment>after 5 time units from requesting access to the field and with no wait signal, the planes take
another 5 time units to reach the field</comment>
		</query>
		<query>
			<formula>A[] forall (i:planeID) Plane(i).Flying imply (Plane(i).x&gt;=1 and Plane(i).x&lt;=3) &amp;&amp; Plane(i).Parked imply (Plane(i).x&gt;=4 and Plane(i).x&lt;=6) </formula>
			<comment>each plane takes non-deterministically between 1-3 time units to take off, and between 4-6
time units to land and park;

status: imcompleto, falta definir os limites inferiores</comment>
		</query>
		<query>
			<formula></formula>
			<comment>after taking off and after parking the planes notify the Controller with a gone signal</comment>
		</query>
		<query>
			<formula>A[] forall (i:planeID) (Plane(i).FieldTakeOff || Plane(i).FieldLanding) imply (Plane(i).x&gt;=5 and Plane(i).x&lt;=7)</formula>
			<comment>if a plane is told to wait, we assume it will take between 5-7 time units to reach the field</comment>
		</query>
	</queries>
</nta>
