module Chair

  use int.Int
  use int.EuclideanDivision

  val ref x : int
  val ref y : int
  val ref o : int

  let main() 
  =
    x <- 0;
    y <- 0;
    o <- 0;
    while true do
        invariant { mod (x + y) 2 = mod o 2 }
        invariant { not (x = 1 /\ y = 0 /\ o = 0) }
        if any bool then o <- mod (o + 1) 4
                    else o <- mod (o - 1) 4;
        let l = any int ensures { 0 <= result < 4 } in
        if l = 0 then y <- y - 1
        else if l = 1 then x <- x + 1
        else if l = 2 then x <- x - 1
        else if l = 3 then y <- y + 1;
    done;
    
    
end
